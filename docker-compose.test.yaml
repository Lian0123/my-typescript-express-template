version: "3.8"
services:
  express-test-template-postgres-db:
    image: postgres:12
    env_file:
      - envs/.env
    environment:
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
      - POSTGRES_USER=${POSTGRESQL_USER_NAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_TIMEZONE=${POSTGRESQL_TIMEZONE}
    networks:
      - express-test-template-share-network
    ports:
      - "${POSTGRESQL_MAPPING_PORT}:${POSTGRESQL_PORT}"

  redis-master:
    image: 'bitnami/redis:latest'
    ports:
      - "${REDIS_MAPPING_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_PASSWORD="${REDIS_PASSWORD}
      - REDIS_REPLICATION_MODE=master
    volumes:
      - '/path/to/redis-persistence:/bitnami'

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    networks:
      - express-test-template-share-network
    env_file:
      - envs/.env
    environment: 
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}"
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_USER_NAME}"
    ports:
      - "${RABBITMQ_MONITOR_MAPPING_PORT}:${RABBITMQ_MONITOR_PORT}"
      - "${RABBITMQ_MAPPING_PORT}:${RABBITMQ_PORT}"

  mongodb:
    image: mongo
    env_file:
      - envs/.env
    restart: always
    command: --auth --config /etc/mongo/mongod.conf
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_UERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
      MONGO_INITDB_DATABASE:  "${MONGO_DATABAE}"
      TZ: "${MONGO_TIMEZONE}"
    volumes: 
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./database/configdb:/data/configdb
      - ./database/data:/data/db
      - ./mongod.conf:/etc/mongo/mongod.conf
    networks:
      - express-test-template-share-network
    ports:
      - "${MONGO_MAPPING_PORT}:${MONGO_PORT}"

  plantuml-server:
    image: plantuml/plantuml-server
    env_file:
      - envs/.env
    ports:
      - '${PLANTUML_SERVER_MAPPING_PORT}:8080'
    networks:
      - express-test-template-share-network

  app:
    build: 
      dockerfile: docker/dockerfile
      context: .
      args:
        NODE_JS_VERSION: ${NODE_JS_VERSION}
    volumes:
      - ./:/app
    env_file:
      - envs/.env
    tty: true
    ports:
      - "${SERVICE_MAPPING_PORT}:${SERVICE_PORT}"
    depends_on:
      - rabbitmq
      - express-test-template-postgres-db
      - plantuml-server
    networks:
      - express-test-template-share-network

networks:
  express-test-template-share-network:
    name: express-test-template-share-network

volumes:
  postgresVolume:
